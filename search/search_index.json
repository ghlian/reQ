{
    "docs": [
        {
            "location": "/",
            "text": "reQ\n\n\n\n\nOpen source HTTP requests library for kdb+/q\n\n\nA more fully-featured alternative to kdb+ built-in functions \n.Q.hg\n and \n.Q.hp\n, which provide basic HTTP query functionality.\n\n\nFeatures include:\n\n\n\n\nSupport for \ncustom headers\n\n\nCookies\n\n\nAutomatic conversion of JSON response to kdb+ object\n\n\nBackwards compatible with older versions of kdb+ - tested from v2.8+\n\n\nFollows \nHTTP redirection\n\n\nVerbose mode\n to show raw requests & responses",
            "title": "Overview"
        },
        {
            "location": "/#req",
            "text": "Open source HTTP requests library for kdb+/q  A more fully-featured alternative to kdb+ built-in functions  .Q.hg  and  .Q.hp , which provide basic HTTP query functionality.  Features include:   Support for  custom headers  Cookies  Automatic conversion of JSON response to kdb+ object  Backwards compatible with older versions of kdb+ - tested from v2.8+  Follows  HTTP redirection  Verbose mode  to show raw requests & responses",
            "title": "reQ"
        },
        {
            "location": "/features/cookies/",
            "text": "HTTP Cookies\n\n\n\n\nreQ has built-in support for HTTP cookies; when a response is received with a\n\nSet-Cookie\n header, the relevant cookie will be stored in \n.cookie.jar\n,\nand then used automatically for future requests to the relevant host.\n\n\nExpired cookies will be ignored, although currently the \nMax-Age\n attribute is\nnot taken into account; this will be rectified in a future update.\n\n\nIt's also possible to use the \n.req.addcookie\n function, as\ndemonstrated in the \nAdvent of Code\n example.\n\n\nSetting cookies\n\n\nq).req.get[\"http://httpbin.org/cookies/set?abc=123&def=456\";()!()];\n-- REQUEST --\nGET /cookies/set?abc=123&def=456 HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:49:15 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 223\nLocation: /cookies\nSet-Cookie: abc=123; Path=/\nSet-Cookie: def=456; Path=/\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<title>Redirecting...</title>\n<h1>Redirecting...</h1>\n<p>You should be redirected automatically to target URL: <a href=\"/cookies\">/cookies</a>.  If not click the link.\n-- REQUEST --\nGET /cookies HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\nCookie: abc=123; def=456\n\n\n-- RESPONSE --\nHTTP/1.1 200 OK\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:49:16 GMT\nContent-Type: application/json\nContent-Length: 38\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n{\"cookies\":{\"abc\":\"123\",\"def\":\"456\"}}\n\nq).cookie.jar\nhost          path name | val   expires maxage secure httponly samesite\n------------------------| ---------------------------------------------\n\"httpbin.org\" \"/*\" \"abc\"| \"123\"                0      0\n\"httpbin.org\" \"/*\" \"def\"| \"456\"                0      0\n\n\n\n\nDeleting cookies\n\n\nCookies can be deleted or overwritten in the normal fashion, and expired\ncookies will be ignored.\n\n\nq).req.get[\"http://httpbin.org/cookies/delete?abc\";()!()];\n-- REQUEST --\nGET /cookies/delete?abc HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\nCookie: abc=123; def=456\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:50:48 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 223\nLocation: /cookies\nSet-Cookie: abc=; Expires=Thu, 01-Jan-1970 00:00:00 GMT; Max-Age=0; Path=/\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<title>Redirecting...</title>\n<h1>Redirecting...</h1>\n<p>You should be redirected automatically to target URL: <a href=\"/cookies\">/cookies</a>.  If not click the link.\n-- REQUEST --\nGET /cookies HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\nCookie: def=456\n\n\n-- RESPONSE --\nHTTP/1.1 200 OK\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:50:48 GMT\nContent-Type: application/json\nContent-Length: 26\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n{\"cookies\":{\"def\":\"456\"}}\n\nq).cookie.jar\nhost          path name | val   expires                 maxage secure httponl..\n------------------------| ---------------------------------------------------..\n\"httpbin.org\" \"/*\" \"abc\"| \"\"    1970.01.01T00:00:00.000 0      0      0      ..\n\"httpbin.org\" \"/*\" \"def\"| \"456\"                                0      0      ..\n\n\n\n\nCompatibility with cURL/Netscape cookie jar\n\n\nreQ has support for reading & writing the cookie jar in the format initially\ndeveloped by Netscape and utilised in cURL. See \nhttps://curl.haxx.se/docs/http-cookies.html\n\nfor more details on the format. This support allows for transition from a cURL\nbased workflow.\n\n\nReading cookie jar\n\n\nRead cookie jar with \n.req.readjar\n:\n\n\njonny@kodiak ~/git/req (master) $ more tests/cookiejar \n# Netscape HTTP Cookie File\n# https://curl.haxx.se/docs/http-cookies.html\n# This file was generated by reQ! Edit at your own risk.\n\nhttpbin.org TRUE    /   FALSE   1143149359  abc 123\nhttpbin.org FALSE   /example    TRUE    0   def 123\njonny@kodiak ~/git/req (master) $ q\nKDB+ 3.5 2018.04.25 Copyright (C) 1993-2018 Kx Systems\nl64/ 4(16)core 7360MB jonny kodiak 127.0.1.1 EXPIRE 2019.05.21 jonathon.mcmurray@aquaq.co.uk KOD #4160315\n\nq)\\l req.q\nq).req.readjar`:tests/cookiejar\nhost           path        secure expires                 name  val   httponly maxage samesite\n----------------------------------------------------------------------------------------------\n\"*httpbin.org\" \"/*\"        0      2006.03.23T21:29:19.000 \"abc\" \"123\" 0                       \n\"httpbin.org\"  \"/example*\" 1                              \"def\" \"123\" 0                       \n\n\n\n\nWriting cookie jar\n\n\nWrite cookie jar with \n.req.writejar\n:\n\n\njonny@kodiak ~/git/req (master) $ q\nKDB+ 3.5 2018.04.25 Copyright (C) 1993-2018 Kx Systems\nl64/ 4(16)core 7360MB jonny kodiak 127.0.1.1 EXPIRE 2019.05.21 jonathon.mcmurray@aquaq.co.uk KOD #4160315\n\nq)\\l req.q\n... // build up reQ cookiejar\nq).cookie.jar\nhost           path        name | val   expires                 maxage secure httponly samesite\n--------------------------------| -------------------------------------------------------------\n\"*httpbin.org\" \"/*\"        \"abc\"| \"123\" 2006.03.23T21:29:19.000        0      0                \n\"httpbin.org\"  \"/example*\" \"def\"| \"123\"                                1      0                \nq).req.writejar[`:jar].cookie.jar\n`:jar\nq)\\\\\njonny@kodiak ~/git/req_bk (master) $ more jar\n# Netscape HTTP Cookie File\n# https://curl.haxx.se/docs/http-cookies.html\n# This file was generated by reQ! Edit at your own risk.\n\nhttpbin.org TRUE    /   FALSE   1143149359  abc 123\nhttpbin.org FALSE   /example    TRUE    0   def 123",
            "title": "Cookies"
        },
        {
            "location": "/features/cookies/#http-cookies",
            "text": "reQ has built-in support for HTTP cookies; when a response is received with a Set-Cookie  header, the relevant cookie will be stored in  .cookie.jar ,\nand then used automatically for future requests to the relevant host.  Expired cookies will be ignored, although currently the  Max-Age  attribute is\nnot taken into account; this will be rectified in a future update.  It's also possible to use the  .req.addcookie  function, as\ndemonstrated in the  Advent of Code  example.",
            "title": "HTTP Cookies"
        },
        {
            "location": "/features/cookies/#setting-cookies",
            "text": "q).req.get[\"http://httpbin.org/cookies/set?abc=123&def=456\";()!()];\n-- REQUEST --\nGET /cookies/set?abc=123&def=456 HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:49:15 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 223\nLocation: /cookies\nSet-Cookie: abc=123; Path=/\nSet-Cookie: def=456; Path=/\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<title>Redirecting...</title>\n<h1>Redirecting...</h1>\n<p>You should be redirected automatically to target URL: <a href=\"/cookies\">/cookies</a>.  If not click the link.\n-- REQUEST --\nGET /cookies HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\nCookie: abc=123; def=456\n\n\n-- RESPONSE --\nHTTP/1.1 200 OK\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:49:16 GMT\nContent-Type: application/json\nContent-Length: 38\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n{\"cookies\":{\"abc\":\"123\",\"def\":\"456\"}}\n\nq).cookie.jar\nhost          path name | val   expires maxage secure httponly samesite\n------------------------| ---------------------------------------------\n\"httpbin.org\" \"/*\" \"abc\"| \"123\"                0      0\n\"httpbin.org\" \"/*\" \"def\"| \"456\"                0      0",
            "title": "Setting cookies"
        },
        {
            "location": "/features/cookies/#deleting-cookies",
            "text": "Cookies can be deleted or overwritten in the normal fashion, and expired\ncookies will be ignored.  q).req.get[\"http://httpbin.org/cookies/delete?abc\";()!()];\n-- REQUEST --\nGET /cookies/delete?abc HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\nCookie: abc=123; def=456\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:50:48 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 223\nLocation: /cookies\nSet-Cookie: abc=; Expires=Thu, 01-Jan-1970 00:00:00 GMT; Max-Age=0; Path=/\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<title>Redirecting...</title>\n<h1>Redirecting...</h1>\n<p>You should be redirected automatically to target URL: <a href=\"/cookies\">/cookies</a>.  If not click the link.\n-- REQUEST --\nGET /cookies HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\nCookie: def=456\n\n\n-- RESPONSE --\nHTTP/1.1 200 OK\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:50:48 GMT\nContent-Type: application/json\nContent-Length: 26\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n{\"cookies\":{\"def\":\"456\"}}\n\nq).cookie.jar\nhost          path name | val   expires                 maxage secure httponl..\n------------------------| ---------------------------------------------------..\n\"httpbin.org\" \"/*\" \"abc\"| \"\"    1970.01.01T00:00:00.000 0      0      0      ..\n\"httpbin.org\" \"/*\" \"def\"| \"456\"                                0      0      ..",
            "title": "Deleting cookies"
        },
        {
            "location": "/features/cookies/#compatibility-with-curlnetscape-cookie-jar",
            "text": "reQ has support for reading & writing the cookie jar in the format initially\ndeveloped by Netscape and utilised in cURL. See  https://curl.haxx.se/docs/http-cookies.html \nfor more details on the format. This support allows for transition from a cURL\nbased workflow.",
            "title": "Compatibility with cURL/Netscape cookie jar"
        },
        {
            "location": "/features/cookies/#reading-cookie-jar",
            "text": "Read cookie jar with  .req.readjar :  jonny@kodiak ~/git/req (master) $ more tests/cookiejar \n# Netscape HTTP Cookie File\n# https://curl.haxx.se/docs/http-cookies.html\n# This file was generated by reQ! Edit at your own risk.\n\nhttpbin.org TRUE    /   FALSE   1143149359  abc 123\nhttpbin.org FALSE   /example    TRUE    0   def 123\njonny@kodiak ~/git/req (master) $ q\nKDB+ 3.5 2018.04.25 Copyright (C) 1993-2018 Kx Systems\nl64/ 4(16)core 7360MB jonny kodiak 127.0.1.1 EXPIRE 2019.05.21 jonathon.mcmurray@aquaq.co.uk KOD #4160315\n\nq)\\l req.q\nq).req.readjar`:tests/cookiejar\nhost           path        secure expires                 name  val   httponly maxage samesite\n----------------------------------------------------------------------------------------------\n\"*httpbin.org\" \"/*\"        0      2006.03.23T21:29:19.000 \"abc\" \"123\" 0                       \n\"httpbin.org\"  \"/example*\" 1                              \"def\" \"123\" 0",
            "title": "Reading cookie jar"
        },
        {
            "location": "/features/cookies/#writing-cookie-jar",
            "text": "Write cookie jar with  .req.writejar :  jonny@kodiak ~/git/req (master) $ q\nKDB+ 3.5 2018.04.25 Copyright (C) 1993-2018 Kx Systems\nl64/ 4(16)core 7360MB jonny kodiak 127.0.1.1 EXPIRE 2019.05.21 jonathon.mcmurray@aquaq.co.uk KOD #4160315\n\nq)\\l req.q\n... // build up reQ cookiejar\nq).cookie.jar\nhost           path        name | val   expires                 maxage secure httponly samesite\n--------------------------------| -------------------------------------------------------------\n\"*httpbin.org\" \"/*\"        \"abc\"| \"123\" 2006.03.23T21:29:19.000        0      0                \n\"httpbin.org\"  \"/example*\" \"def\"| \"123\"                                1      0                \nq).req.writejar[`:jar].cookie.jar\n`:jar\nq)\\\\\njonny@kodiak ~/git/req_bk (master) $ more jar\n# Netscape HTTP Cookie File\n# https://curl.haxx.se/docs/http-cookies.html\n# This file was generated by reQ! Edit at your own risk.\n\nhttpbin.org TRUE    /   FALSE   1143149359  abc 123\nhttpbin.org FALSE   /example    TRUE    0   def 123",
            "title": "Writing cookie jar"
        },
        {
            "location": "/features/headers/",
            "text": "HTTP Request Headers\n\n\n\n\nDefault headers\n\n\nThe default headers sent with requests are found in \n.req.def\n:\n\n\nq).req.def\n\"Connection\"| \"Close\"\n\"User-Agent\"| \"kdb+/3.5\"\n\"Accept\"    | \"*/*\"\n\n\n\n\nThe \nUser-Agent\n header is automatically generated from the version of kdb+\n(i.e. \n.z.K\n)\n\n\nCustom headers\n\n\nOne of the key features of reQ is the ability to send custom headers with HTTP\nrequests. This is done by supplying a dictionary of custom headers as the\nsecond argument to many of the \nUser API\n functions, such as\n\n.req.get\n, \n.req.post\n,\n\n.req.delete\n and \n.req.del\n\n\nFor example:\n\n\nq).req.get[\"http://httpbin.org/headers\";`custom`headers!(\"with custom\";\"values\")]\n       | Accept Connection Custom        Headers  Host          User-Agent\n-------| -----------------------------------------------------------------\nheaders| \"*/*\"  \"close\"    \"with custom\" \"values\" \"httpbin.org\" \"kdb+/3.5\"",
            "title": "Headers"
        },
        {
            "location": "/features/headers/#http-request-headers",
            "text": "",
            "title": "HTTP Request Headers"
        },
        {
            "location": "/features/headers/#default-headers",
            "text": "The default headers sent with requests are found in  .req.def :  q).req.def\n\"Connection\"| \"Close\"\n\"User-Agent\"| \"kdb+/3.5\"\n\"Accept\"    | \"*/*\"  The  User-Agent  header is automatically generated from the version of kdb+\n(i.e.  .z.K )",
            "title": "Default headers"
        },
        {
            "location": "/features/headers/#custom-headers",
            "text": "One of the key features of reQ is the ability to send custom headers with HTTP\nrequests. This is done by supplying a dictionary of custom headers as the\nsecond argument to many of the  User API  functions, such as .req.get ,  .req.post , .req.delete  and  .req.del  For example:  q).req.get[\"http://httpbin.org/headers\";`custom`headers!(\"with custom\";\"values\")]\n       | Accept Connection Custom        Headers  Host          User-Agent\n-------| -----------------------------------------------------------------\nheaders| \"*/*\"  \"close\"    \"with custom\" \"values\" \"httpbin.org\" \"kdb+/3.5\"",
            "title": "Custom headers"
        },
        {
            "location": "/features/redirects/",
            "text": "HTTP redirects\n\n\n\n\nreQ will automatically follow redirects, both absolute & relative. For example,\n\n\nRelative redirect example\n\n\nq).req.get[\"http://httpbin.org/relative-redirect/2\";()!()];\n-- REQUEST --\nGET /relative-redirect/2 HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:41:53 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 0\nLocation: /relative-redirect/1\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n\n-- REQUEST --\nGET /relative-redirect/1 HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:41:54 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 0\nLocation: /get\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n\n-- REQUEST --\nGET /get HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 200 OK\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:41:54 GMT\nContent-Type: application/json\nContent-Length: 162\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n{\"args\":{},\"headers\":{\"Accept\":\"*/*\",\"Connection\":\"close\",\"Host\":\"httpbin.org\",\"User-Agent\":\"kdb+/3.5\"},\"origin\":\"146.199.80.196\",\"url\":\"http://httpbin.org/get\"}\n\n\n\n\nAbsolute redirect example\n\n\nq).req.get[\"http://httpbin.org/absolute-redirect/2\";()!()];\n-- REQUEST --\nGET /absolute-redirect/2 HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:42:02 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 283\nLocation: http://httpbin.org/absolute-redirect/1\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<title>Redirecting...</title>\n<h1>Redirecting...</h1>\n<p>You should be redirected automatically to target URL: <a href=\"http://httpbin.org/absolute-redirect/1\">http://httpbin.org/absolute-redirect/1</a>.  If not click the link.\n-- REQUEST --\nGET /absolute-redirect/1 HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:42:02 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 251\nLocation: http://httpbin.org/get\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<title>Redirecting...</h1>\n<p>You should be redirected automatically to target URL: <a href=\"http://httpbin.org/get\">http://httpbin.org/get</a>.  If not click the link.\n-- REQUEST --\nGET /get HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 200 OK\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:42:03 GMT\nContent-Type: application/json\nContent-Length: 162\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n{\"args\":{},\"headers\":{\"Accept\":\"*/*\",\"Connection\":\"close\",\"Host\":\"httpbin.org\",\"User-Agent\":\"kdb+/3.5\"},\"origin\":\"146.199.80.196\",\"url\":\"http://httpbin.org/get\"}",
            "title": "HTTP redirects"
        },
        {
            "location": "/features/redirects/#http-redirects",
            "text": "reQ will automatically follow redirects, both absolute & relative. For example,",
            "title": "HTTP redirects"
        },
        {
            "location": "/features/redirects/#relative-redirect-example",
            "text": "q).req.get[\"http://httpbin.org/relative-redirect/2\";()!()];\n-- REQUEST --\nGET /relative-redirect/2 HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:41:53 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 0\nLocation: /relative-redirect/1\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n\n-- REQUEST --\nGET /relative-redirect/1 HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:41:54 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 0\nLocation: /get\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n\n-- REQUEST --\nGET /get HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 200 OK\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:41:54 GMT\nContent-Type: application/json\nContent-Length: 162\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n{\"args\":{},\"headers\":{\"Accept\":\"*/*\",\"Connection\":\"close\",\"Host\":\"httpbin.org\",\"User-Agent\":\"kdb+/3.5\"},\"origin\":\"146.199.80.196\",\"url\":\"http://httpbin.org/get\"}",
            "title": "Relative redirect example"
        },
        {
            "location": "/features/redirects/#absolute-redirect-example",
            "text": "q).req.get[\"http://httpbin.org/absolute-redirect/2\";()!()];\n-- REQUEST --\nGET /absolute-redirect/2 HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:42:02 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 283\nLocation: http://httpbin.org/absolute-redirect/1\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<title>Redirecting...</title>\n<h1>Redirecting...</h1>\n<p>You should be redirected automatically to target URL: <a href=\"http://httpbin.org/absolute-redirect/1\">http://httpbin.org/absolute-redirect/1</a>.  If not click the link.\n-- REQUEST --\nGET /absolute-redirect/1 HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:42:02 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 251\nLocation: http://httpbin.org/get\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<title>Redirecting...</h1>\n<p>You should be redirected automatically to target URL: <a href=\"http://httpbin.org/get\">http://httpbin.org/get</a>.  If not click the link.\n-- REQUEST --\nGET /get HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 200 OK\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:42:03 GMT\nContent-Type: application/json\nContent-Length: 162\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n{\"args\":{},\"headers\":{\"Accept\":\"*/*\",\"Connection\":\"close\",\"Host\":\"httpbin.org\",\"User-Agent\":\"kdb+/3.5\"},\"origin\":\"146.199.80.196\",\"url\":\"http://httpbin.org/get\"}",
            "title": "Absolute redirect example"
        },
        {
            "location": "/features/verbose/",
            "text": "Verbose mode\n\n\n\n\nreQ includes a verbose mode which displays the raw HTTP requests & responses.\nThis can be useful for debugging purposes, to view the full headers on both the\nrequest & response.\n\n\nTo enable this mode, either start the process with \n-verbose\n on the command\nline, or else set \n.req.VERBOSE:1b\n before making the requests.\n\n\nExamples\n\n\nSetting \n-verbose\n on command line & performing a basic HTTP request:\n\n\njonny@kodiak ~/reQ (master) $ q req.q -verbose\nKDB+ 3.5 2018.04.25 Copyright (C) 1993-2018 Kx Systems\nl64/ 4(16)core 7360MB jonny kodiak 127.0.1.1 EXPIRE 2019.05.21 jonathon.mcmurray@aquaq.co.uk KOD #4160315\n\nq).req.get[\"http://httpbin.org/get\";()!()];\n-- REQUEST --\nGET /get HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 200 OK\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:35:50 GMT\nContent-Type: application/json\nContent-Length: 162\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n{\"args\":{},\"headers\":{\"Accept\":\"*/*\",\"Connection\":\"close\",\"Host\":\"httpbin.org\",\"User-Agent\":\"kdb+/3.5\"},\"origin\":\"146.199.80.196\",\"url\":\"http://httpbin.org/get\"}\n\n\n\n\nAn example including \nHTTP redirects\n i.e. multiple requests & responses, and setting \n.req.VERBOSE:1b\n within q session:\n\n\njonny@kodiak ~/reQ (master) $ q req.q\nKDB+ 3.5 2018.04.25 Copyright (C) 1993-2018 Kx Systems\nl64/ 4(16)core 7360MB jonny kodiak 127.0.1.1 EXPIRE 2019.05.21 jonathon.mcmurray@aquaq.co.uk KOD #4160315\n\nq).req.VERBOSE:1b\nq).req.get[\"http://httpbin.org/redirect/2\";()!()];\n-- REQUEST --\nGET /redirect/2 HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:36:32 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 247\nLocation: /relative-redirect/1\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<title>Redirecting...</title>\n<h1>Redirecting...</h1>\n<p>You should be redirected automatically to target URL: <a href=\"/relative-redirect/1\">/relative-redirect/1</a>.  If not click the link.\n-- REQUEST --\nGET /relative-redirect/1 HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:36:32 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 0\nLocation: /get\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n\n-- REQUEST --\nGET /get HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 200 OK\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:36:32 GMT\nContent-Type: application/json\nContent-Length: 162\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n{\"args\":{},\"headers\":{\"Accept\":\"*/*\",\"Connection\":\"close\",\"Host\":\"httpbin.org\",\"User-Agent\":\"kdb+/3.5\"},\"origin\":\"146.199.80.196\",\"url\":\"http://httpbin.org/get\"}",
            "title": "Verbose mode"
        },
        {
            "location": "/features/verbose/#verbose-mode",
            "text": "reQ includes a verbose mode which displays the raw HTTP requests & responses.\nThis can be useful for debugging purposes, to view the full headers on both the\nrequest & response.  To enable this mode, either start the process with  -verbose  on the command\nline, or else set  .req.VERBOSE:1b  before making the requests.",
            "title": "Verbose mode"
        },
        {
            "location": "/features/verbose/#examples",
            "text": "Setting  -verbose  on command line & performing a basic HTTP request:  jonny@kodiak ~/reQ (master) $ q req.q -verbose\nKDB+ 3.5 2018.04.25 Copyright (C) 1993-2018 Kx Systems\nl64/ 4(16)core 7360MB jonny kodiak 127.0.1.1 EXPIRE 2019.05.21 jonathon.mcmurray@aquaq.co.uk KOD #4160315\n\nq).req.get[\"http://httpbin.org/get\";()!()];\n-- REQUEST --\nGET /get HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 200 OK\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:35:50 GMT\nContent-Type: application/json\nContent-Length: 162\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n{\"args\":{},\"headers\":{\"Accept\":\"*/*\",\"Connection\":\"close\",\"Host\":\"httpbin.org\",\"User-Agent\":\"kdb+/3.5\"},\"origin\":\"146.199.80.196\",\"url\":\"http://httpbin.org/get\"}  An example including  HTTP redirects  i.e. multiple requests & responses, and setting  .req.VERBOSE:1b  within q session:  jonny@kodiak ~/reQ (master) $ q req.q\nKDB+ 3.5 2018.04.25 Copyright (C) 1993-2018 Kx Systems\nl64/ 4(16)core 7360MB jonny kodiak 127.0.1.1 EXPIRE 2019.05.21 jonathon.mcmurray@aquaq.co.uk KOD #4160315\n\nq).req.VERBOSE:1b\nq).req.get[\"http://httpbin.org/redirect/2\";()!()];\n-- REQUEST --\nGET /redirect/2 HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:36:32 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 247\nLocation: /relative-redirect/1\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<title>Redirecting...</title>\n<h1>Redirecting...</h1>\n<p>You should be redirected automatically to target URL: <a href=\"/relative-redirect/1\">/relative-redirect/1</a>.  If not click the link.\n-- REQUEST --\nGET /relative-redirect/1 HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 302 FOUND\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:36:32 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 0\nLocation: /get\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n\n-- REQUEST --\nGET /get HTTP/1.1\nHost: httpbin.org\nConnection: Close\nUser-Agent: kdb+/3.5\nAccept: */*\n\n\n-- RESPONSE --\nHTTP/1.1 200 OK\nConnection: close\nServer: gunicorn/19.8.1\nDate: Mon, 04 Jun 2018 22:36:32 GMT\nContent-Type: application/json\nContent-Length: 162\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nVia: 1.1 vegur\n\n{\"args\":{},\"headers\":{\"Accept\":\"*/*\",\"Connection\":\"close\",\"Host\":\"httpbin.org\",\"User-Agent\":\"kdb+/3.5\"},\"origin\":\"146.199.80.196\",\"url\":\"http://httpbin.org/get\"}",
            "title": "Examples"
        },
        {
            "location": "/api/md/public/",
            "text": ".b64.dec\n\n\nbase64 decode a string\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nstring\n\n\nbase64 string to be decoded\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nsting\n\n\ndecoded string\n\n\n\n\n\n\n\n\n.b64.enc\n\n\nbase64 encode a string\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nstring\n\n\nstring to be encoded\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nsting\n\n\nencoded string\n\n\n\n\n\n\n\n\n.cookie.addcookie\n\n\nAdd or update a cookie in the jar\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nh\n\n\nstring\n\n\nhostname on which to apply cookie\n\n\n\n\n\n\nc\n\n\nstring\n\n\ncookie string\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nnull\n\n\n\n\n\n\n\n\n\n\n.cookie.jar\n\n\nstorage for cookies\n\n\n.cookie.readjar\n\n\nRead a Netscape/cURL format cookiejar\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nf\n\n\nstring | symbol | hsym\n\n\nfilename\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n<returns>\n\n\ntable\n\n\ncookie jar\n\n\n\n\n\n\n\n\n.req.d\n\n\nSend an HTTP DELETE request,no body or custom headers\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nsymbol | string | hsym\n\n\nURL\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n(dict; string) | any\n\n\nHTTP response (headers;body), or parsed if JSON\n\n\n\n\n\n\n\n\n.req.del\n\n\nSend an HTTP DELETE request, no body\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nsymbol | string | hsym\n\n\nURL\n\n\n\n\n\n\ny\n\n\ndict\n\n\ndictionary of custom HTTP headers to use\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n(dict; string) | any\n\n\nHTTP response (headers;body), or parsed if JSON\n\n\n\n\n\n\n\n\n.req.delete\n\n\nSend an HTTP DELETE request\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nsymbol | string | hsym\n\n\nURL\n\n\n\n\n\n\ny\n\n\ndict\n\n\ndictionary of custom HTTP headers to use\n\n\n\n\n\n\nz\n\n\nstring\n\n\nbody for HTTP request\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n(dict; string) | any\n\n\nHTTP response (headers;body), or parsed if JSON\n\n\n\n\n\n\n\n\n.req.g\n\n\nSend an HTTP GET request (simple, no custom headers)\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nsymbol | string | hsym\n\n\nURL\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n(dict; string) | any\n\n\nHTTP response (headers;body), or parsed if JSON\n\n\n\n\n\n\n\n\n.req.get\n\n\nSend an HTTP GET request\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nsymbol | string | hsym\n\n\nURL\n\n\n\n\n\n\ny\n\n\ndict\n\n\ndictionary of custom HTTP headers to use\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n(dict; string) | any\n\n\nHTTP response (headers;body), or parsed if JSON\n\n\n\n\n\n\n\n\n.req.post\n\n\nSend an HTTP POST request\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nsymbol | string | hsym\n\n\nURL\n\n\n\n\n\n\ny\n\n\ndict\n\n\ndictionary of custom HTTP headers to use\n\n\n\n\n\n\nz\n\n\nstring\n\n\nbody for HTTP request\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n(dict; string) | any\n\n\nHTTP response (headers;body), or parsed if JSON\n\n\n\n\n\n\n\n\n.req.send\n\n\nSend an HTTP request\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nm\n\n\nsymbol\n\n\nHTTP method/verb\n\n\n\n\n\n\nu\n\n\nsymbol | string | hsym\n\n\nURL\n\n\n\n\n\n\nhd\n\n\ndict\n\n\ndictionary of custom HTTP headers to use\n\n\n\n\n\n\np\n\n\nstring\n\n\npayload/body (for POST requests)\n\n\n\n\n\n\nv\n\n\nboolean\n\n\nverbose flag\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n(dict; string)\n\n\nHTTP response (headers;body)\n\n\n\n\n\n\n\n\n.req.timeout\n\n\nEXPERIMENTAL\n send a request with a client-side timeout\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nt\n\n\nint | long\n\n\ntimeout (seconds)\n\n\n\n\n\n\nm\n\n\nsymbol\n\n\nHTTP method/verb\n\n\n\n\n\n\nu\n\n\nsymbol | string | hsym\n\n\nURL\n\n\n\n\n\n\nhd\n\n\ndict\n\n\ndictionary of custom HTTP headers to use\n\n\n\n\n\n\np\n\n\nstring\n\n\npayload/body (for POST requests)\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n(dict; string)\n\n\nHTTP response (headers;body)",
            "title": "Public functions"
        },
        {
            "location": "/api/md/public/#b64dec",
            "text": "base64 decode a string  Parameter(s):     Name  Type  Description      x  string  base64 string to be decoded     Returns:     Name  Type  Description       sting  decoded string",
            "title": ".b64.dec"
        },
        {
            "location": "/api/md/public/#b64enc",
            "text": "base64 encode a string  Parameter(s):     Name  Type  Description      x  string  string to be encoded     Returns:     Name  Type  Description       sting  encoded string",
            "title": ".b64.enc"
        },
        {
            "location": "/api/md/public/#cookieaddcookie",
            "text": "Add or update a cookie in the jar  Parameter(s):     Name  Type  Description      h  string  hostname on which to apply cookie    c  string  cookie string     Returns:     Name  Type  Description       null",
            "title": ".cookie.addcookie"
        },
        {
            "location": "/api/md/public/#cookiejar",
            "text": "storage for cookies",
            "title": ".cookie.jar"
        },
        {
            "location": "/api/md/public/#cookiereadjar",
            "text": "Read a Netscape/cURL format cookiejar  Parameter(s):     Name  Type  Description      f  string | symbol | hsym  filename     Returns:     Name  Type  Description      <returns>  table  cookie jar",
            "title": ".cookie.readjar"
        },
        {
            "location": "/api/md/public/#reqd",
            "text": "Send an HTTP DELETE request,no body or custom headers  Parameter(s):     Name  Type  Description      x  symbol | string | hsym  URL     Returns:     Name  Type  Description       (dict; string) | any  HTTP response (headers;body), or parsed if JSON",
            "title": ".req.d"
        },
        {
            "location": "/api/md/public/#reqdel",
            "text": "Send an HTTP DELETE request, no body  Parameter(s):     Name  Type  Description      x  symbol | string | hsym  URL    y  dict  dictionary of custom HTTP headers to use     Returns:     Name  Type  Description       (dict; string) | any  HTTP response (headers;body), or parsed if JSON",
            "title": ".req.del"
        },
        {
            "location": "/api/md/public/#reqdelete",
            "text": "Send an HTTP DELETE request  Parameter(s):     Name  Type  Description      x  symbol | string | hsym  URL    y  dict  dictionary of custom HTTP headers to use    z  string  body for HTTP request     Returns:     Name  Type  Description       (dict; string) | any  HTTP response (headers;body), or parsed if JSON",
            "title": ".req.delete"
        },
        {
            "location": "/api/md/public/#reqg",
            "text": "Send an HTTP GET request (simple, no custom headers)  Parameter(s):     Name  Type  Description      x  symbol | string | hsym  URL     Returns:     Name  Type  Description       (dict; string) | any  HTTP response (headers;body), or parsed if JSON",
            "title": ".req.g"
        },
        {
            "location": "/api/md/public/#reqget",
            "text": "Send an HTTP GET request  Parameter(s):     Name  Type  Description      x  symbol | string | hsym  URL    y  dict  dictionary of custom HTTP headers to use     Returns:     Name  Type  Description       (dict; string) | any  HTTP response (headers;body), or parsed if JSON",
            "title": ".req.get"
        },
        {
            "location": "/api/md/public/#reqpost",
            "text": "Send an HTTP POST request  Parameter(s):     Name  Type  Description      x  symbol | string | hsym  URL    y  dict  dictionary of custom HTTP headers to use    z  string  body for HTTP request     Returns:     Name  Type  Description       (dict; string) | any  HTTP response (headers;body), or parsed if JSON",
            "title": ".req.post"
        },
        {
            "location": "/api/md/public/#reqsend",
            "text": "Send an HTTP request  Parameter(s):     Name  Type  Description      m  symbol  HTTP method/verb    u  symbol | string | hsym  URL    hd  dict  dictionary of custom HTTP headers to use    p  string  payload/body (for POST requests)    v  boolean  verbose flag     Returns:     Name  Type  Description       (dict; string)  HTTP response (headers;body)",
            "title": ".req.send"
        },
        {
            "location": "/api/md/public/#reqtimeout",
            "text": "EXPERIMENTAL  send a request with a client-side timeout  Parameter(s):     Name  Type  Description      t  int | long  timeout (seconds)    m  symbol  HTTP method/verb    u  symbol | string | hsym  URL    hd  dict  dictionary of custom HTTP headers to use    p  string  payload/body (for POST requests)     Returns:     Name  Type  Description       (dict; string)  HTTP response (headers;body)",
            "title": ".req.timeout"
        },
        {
            "location": "/api/md/private/",
            "text": ".auth.getauth\n\n\nEXPERIMENTAL\n prompt for authorization if requested\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nh\n\n\nheaders\n\n\nHTTP response headers\n\n\n\n\n\n\nu\n\n\nstring | symbol | hsym\n\n\nURL\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nstring\n\n\nupdated URL with supplied credentials\n\n\n\n\n\n\n\n\n.cookie.addcookies\n\n\nAdd stored cookie(s) relevant to current query\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nq\n\n\ndict\n\n\nquery object\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n<returns>\n\n\ndict\n\n\nquery objeect with added cookies\n\n\n\n\n\n\n\n\n.cookie.getcookies\n\n\nGet stored cookie(s) relevant to current query\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nq\n\n\ndict\n\n\nquery object\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nstring\n\n\ncookie(s)\n\n\n\n\n\n\n\n\n.req.addheaders\n\n\nConvert headers to strings & add authorization and Content-Length\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nq\n\n\ndict\n\n\nquery object\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n<returns>\n\n\ndict\n\n\nUpdated query object\n\n\n\n\n\n\n\n\n.req.buildquery\n\n\nConstruct full HTTP query string from query object\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nq\n\n\ndict\n\n\nquery object\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nstring\n\n\nHTTP query string\n\n\n\n\n\n\n\n\n.req.enchd\n\n\nConvert a KDB dictionary into HTTP headers\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nd\n\n\ndict\n\n\ndictionary of headers\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nstring\n\n\nstring HTTP headers\n\n\n\n\n\n\n\n\n.req.formatresp\n\n\nSplit HTTP response into headers & dict\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nr\n\n\nstring\n\n\nraw HTTP response\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n(dict; string)\n\n\n(response header;response body)\n\n\n\n\n\n\n\n\n.req.gb\n\n\nGenerate boundary marker\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nany\n\n\nUnused\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nstring\n\n\nBoundary marker\n\n\n\n\n\n\n\n\n.req.mkpt\n\n\nCreate one part for a multipart form\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nb\n\n\nstring\n\n\nboundary marker\n\n\n\n\n\n\nn\n\n\nstring\n\n\nname for form part\n\n\n\n\n\n\nv\n\n\nstring\n\n\nvalue for form part\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nstring[]\n\n\nmultipart form\n\n\n\n\n\n\n\n\n.req.mult\n\n\nBuild multi-part object\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nb\n\n\nstring\n\n\nboundary marker\n\n\n\n\n\n\nd\n\n\ndict\n\n\nheaders (incl. file to be multiparted)\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nstring\n\n\nMultipart form\n\n\n\n\n\n\n\n\n.req.multi\n\n\nConvert a q dictionary to a multipart form\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nd\n\n\ndict\n\n\nkdb dictionary to convert to form\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n(dict; string)\n\n\n(HTTP headers;body) to give to .req.post\n\n\n\n\n\n\n\n\n.req.okstatus\n\n\nSignal if not OK status, return unchanged response if OK\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nv\n\n\nboolean\n\n\nverbose flag\n\n\n\n\n\n\nx\n\n\n(dict; string)\n\n\nHTTP response object\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n(dict; string)\n\n\nHTTP response object\n\n\n\n\n\n\n\n\n.req.parseresp\n\n\nParse to kdb object based on Content-Type header. Only supports JSON currently\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nr\n\n\n(dict;body)\n\n\nHTTP respone\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nany\n\n\nParsed response\n\n\n\n\n\n\n\n\n.req.proxy\n\n\nApplies proxy if relevant\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nu\n\n\ndict\n\n\nURL object\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n<returns>\n\n\ndict\n\n\nUpdated URL object\n\n\n\n\n\n\n\n\n.status.class\n\n\nget status \"class\" from status code, header dict or return object\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nint | dict | (dict; string)\n\n\nstatus code, header dict or return object\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nint\n\n\nstatus class\n\n\n\n\n\n\n\n\n.url.dec\n\n\ndecode a URL encoded string to a KDB dictionary\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nstring\n\n\nURL encoded string\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n<returns>\n\n\ndict\n\n\nkdb dictionary to encode\n\n\n\n\n\n\n\n\n.url.enc\n\n\nencode a KDB dictionary as a URL encoded string\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nd\n\n\ndict\n\n\nkdb dictionary to encode\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nstring\n\n\nURL encoded string\n\n\n\n\n\n\n\n\n.url.format\n\n\nformat URL object into string\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\ndict\n\n\nURL dictionary\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nstring\n\n\nURL\n\n\n\n\n\n\n\n\n.url.hsurl\n\n\nreturn URL as an hsym\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nstring | symbol | hsym\n\n\nURL\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nhsym\n\n\nURL\n\n\n\n\n\n\n\n\n.url.hu\n\n\nURI escaping for non-safe chars, RFC-3986\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nstring\n\n\nURL\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nstring\n\n\nURL\n\n\n\n\n\n\n\n\n.url.parse\n\n\nparse a string/symbol/hsym URL into a URL dictionary & parse query\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nstring | symbol | hsym\n\n\nURL containing query\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n<returns>\n\n\ndict\n\n\nURL dictionary\n\n\n\n\n\n\n\n\n.url.parse0\n\n\nparse a string/symbol/hsym URL into a URL dictionary\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nq\n\n\nboolean\n\n\nparse URL query to kdb dict\n\n\n\n\n\n\nx\n\n\nstring | symbol | hsym\n\n\nURL containing query\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n<returns>\n\n\ndict\n\n\nURL dictionary\n\n\n\n\n\n\n\n\n.url.query\n\n\nParse URL query; split on ?, urldecode query\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nstring\n\n\nURL containing query\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n(string; dict)\n\n\n(URL;parsed query)\n\n\n\n\n\n\n\n\n.url.sturl\n\n\nreturn URL as a string\n\n\nParameter(s):\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nstring | symbol | hsym\n\n\nURL\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\nstring\n\n\nURL",
            "title": "Private functions"
        },
        {
            "location": "/api/md/private/#authgetauth",
            "text": "EXPERIMENTAL  prompt for authorization if requested  Parameter(s):     Name  Type  Description      h  headers  HTTP response headers    u  string | symbol | hsym  URL     Returns:     Name  Type  Description       string  updated URL with supplied credentials",
            "title": ".auth.getauth"
        },
        {
            "location": "/api/md/private/#cookieaddcookies",
            "text": "Add stored cookie(s) relevant to current query  Parameter(s):     Name  Type  Description      q  dict  query object     Returns:     Name  Type  Description      <returns>  dict  query objeect with added cookies",
            "title": ".cookie.addcookies"
        },
        {
            "location": "/api/md/private/#cookiegetcookies",
            "text": "Get stored cookie(s) relevant to current query  Parameter(s):     Name  Type  Description      q  dict  query object     Returns:     Name  Type  Description       string  cookie(s)",
            "title": ".cookie.getcookies"
        },
        {
            "location": "/api/md/private/#reqaddheaders",
            "text": "Convert headers to strings & add authorization and Content-Length  Parameter(s):     Name  Type  Description      q  dict  query object     Returns:     Name  Type  Description      <returns>  dict  Updated query object",
            "title": ".req.addheaders"
        },
        {
            "location": "/api/md/private/#reqbuildquery",
            "text": "Construct full HTTP query string from query object  Parameter(s):     Name  Type  Description      q  dict  query object     Returns:     Name  Type  Description       string  HTTP query string",
            "title": ".req.buildquery"
        },
        {
            "location": "/api/md/private/#reqenchd",
            "text": "Convert a KDB dictionary into HTTP headers  Parameter(s):     Name  Type  Description      d  dict  dictionary of headers     Returns:     Name  Type  Description       string  string HTTP headers",
            "title": ".req.enchd"
        },
        {
            "location": "/api/md/private/#reqformatresp",
            "text": "Split HTTP response into headers & dict  Parameter(s):     Name  Type  Description      r  string  raw HTTP response     Returns:     Name  Type  Description       (dict; string)  (response header;response body)",
            "title": ".req.formatresp"
        },
        {
            "location": "/api/md/private/#reqgb",
            "text": "Generate boundary marker  Parameter(s):     Name  Type  Description      x  any  Unused     Returns:     Name  Type  Description       string  Boundary marker",
            "title": ".req.gb"
        },
        {
            "location": "/api/md/private/#reqmkpt",
            "text": "Create one part for a multipart form  Parameter(s):     Name  Type  Description      b  string  boundary marker    n  string  name for form part    v  string  value for form part     Returns:     Name  Type  Description       string[]  multipart form",
            "title": ".req.mkpt"
        },
        {
            "location": "/api/md/private/#reqmult",
            "text": "Build multi-part object  Parameter(s):     Name  Type  Description      b  string  boundary marker    d  dict  headers (incl. file to be multiparted)     Returns:     Name  Type  Description       string  Multipart form",
            "title": ".req.mult"
        },
        {
            "location": "/api/md/private/#reqmulti",
            "text": "Convert a q dictionary to a multipart form  Parameter(s):     Name  Type  Description      d  dict  kdb dictionary to convert to form     Returns:     Name  Type  Description       (dict; string)  (HTTP headers;body) to give to .req.post",
            "title": ".req.multi"
        },
        {
            "location": "/api/md/private/#reqokstatus",
            "text": "Signal if not OK status, return unchanged response if OK  Parameter(s):     Name  Type  Description      v  boolean  verbose flag    x  (dict; string)  HTTP response object     Returns:     Name  Type  Description       (dict; string)  HTTP response object",
            "title": ".req.okstatus"
        },
        {
            "location": "/api/md/private/#reqparseresp",
            "text": "Parse to kdb object based on Content-Type header. Only supports JSON currently  Parameter(s):     Name  Type  Description      r  (dict;body)  HTTP respone     Returns:     Name  Type  Description       any  Parsed response",
            "title": ".req.parseresp"
        },
        {
            "location": "/api/md/private/#reqproxy",
            "text": "Applies proxy if relevant  Parameter(s):     Name  Type  Description      u  dict  URL object     Returns:     Name  Type  Description      <returns>  dict  Updated URL object",
            "title": ".req.proxy"
        },
        {
            "location": "/api/md/private/#statusclass",
            "text": "get status \"class\" from status code, header dict or return object  Parameter(s):     Name  Type  Description      x  int | dict | (dict; string)  status code, header dict or return object     Returns:     Name  Type  Description       int  status class",
            "title": ".status.class"
        },
        {
            "location": "/api/md/private/#urldec",
            "text": "decode a URL encoded string to a KDB dictionary  Parameter(s):     Name  Type  Description      x  string  URL encoded string     Returns:     Name  Type  Description      <returns>  dict  kdb dictionary to encode",
            "title": ".url.dec"
        },
        {
            "location": "/api/md/private/#urlenc",
            "text": "encode a KDB dictionary as a URL encoded string  Parameter(s):     Name  Type  Description      d  dict  kdb dictionary to encode     Returns:     Name  Type  Description       string  URL encoded string",
            "title": ".url.enc"
        },
        {
            "location": "/api/md/private/#urlformat",
            "text": "format URL object into string  Parameter(s):     Name  Type  Description      x  dict  URL dictionary     Returns:     Name  Type  Description       string  URL",
            "title": ".url.format"
        },
        {
            "location": "/api/md/private/#urlhsurl",
            "text": "return URL as an hsym  Parameter(s):     Name  Type  Description      x  string | symbol | hsym  URL     Returns:     Name  Type  Description       hsym  URL",
            "title": ".url.hsurl"
        },
        {
            "location": "/api/md/private/#urlhu",
            "text": "URI escaping for non-safe chars, RFC-3986  Parameter(s):     Name  Type  Description      x  string  URL     Returns:     Name  Type  Description       string  URL",
            "title": ".url.hu"
        },
        {
            "location": "/api/md/private/#urlparse",
            "text": "parse a string/symbol/hsym URL into a URL dictionary & parse query  Parameter(s):     Name  Type  Description      x  string | symbol | hsym  URL containing query     Returns:     Name  Type  Description      <returns>  dict  URL dictionary",
            "title": ".url.parse"
        },
        {
            "location": "/api/md/private/#urlparse0",
            "text": "parse a string/symbol/hsym URL into a URL dictionary  Parameter(s):     Name  Type  Description      q  boolean  parse URL query to kdb dict    x  string | symbol | hsym  URL containing query     Returns:     Name  Type  Description      <returns>  dict  URL dictionary",
            "title": ".url.parse0"
        },
        {
            "location": "/api/md/private/#urlquery",
            "text": "Parse URL query; split on ?, urldecode query  Parameter(s):     Name  Type  Description      x  string  URL containing query     Returns:     Name  Type  Description       (string; dict)  (URL;parsed query)",
            "title": ".url.query"
        },
        {
            "location": "/api/md/private/#urlsturl",
            "text": "return URL as a string  Parameter(s):     Name  Type  Description      x  string | symbol | hsym  URL     Returns:     Name  Type  Description       string  URL",
            "title": ".url.sturl"
        },
        {
            "location": "/api/md/variable/",
            "text": ".req.VERBOSE\n\n\nFlag for verbose mode\n\n\n.req.def\n\n\nDefault headers added to all HTTP requests\n\n\n.req.ty\n\n\nDictionary with Content-Types",
            "title": "Variables"
        },
        {
            "location": "/api/md/variable/#reqverbose",
            "text": "Flag for verbose mode",
            "title": ".req.VERBOSE"
        },
        {
            "location": "/api/md/variable/#reqdef",
            "text": "Default headers added to all HTTP requests",
            "title": ".req.def"
        },
        {
            "location": "/api/md/variable/#reqty",
            "text": "Dictionary with Content-Types",
            "title": ".req.ty"
        },
        {
            "location": "/examples/aoc/",
            "text": "Advent of Code",
            "title": "Advent of Code"
        },
        {
            "location": "/examples/aoc/#advent-of-code",
            "text": "",
            "title": "Advent of Code"
        },
        {
            "location": "/examples/github/",
            "text": "GitHub",
            "title": "GitHub"
        },
        {
            "location": "/examples/github/#github",
            "text": "",
            "title": "GitHub"
        },
        {
            "location": "/examples/jira/",
            "text": "Atlassian JIRA",
            "title": "JIRA"
        },
        {
            "location": "/examples/jira/#atlassian-jira",
            "text": "",
            "title": "Atlassian JIRA"
        },
        {
            "location": "/examples/zoho/",
            "text": "Zoho People HR",
            "title": "Zoho"
        },
        {
            "location": "/examples/zoho/#zoho-people-hr",
            "text": "",
            "title": "Zoho People HR"
        }
    ]
}